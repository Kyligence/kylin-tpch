# deploy kylin version: current only support Kylin 4
DEPLOY_KYLIN_VERSION: &KYLIN_VERSION '4'

# ============ Debug Configs ============
# For Debug, null means that cluster on aws need to be created.
CLOUD_ADDR:

# ============ Debug Configs End ============

# ============ Global Configs ============
## deploy platform: current only support ec2
DEPLOY_PLATFORM: &platform ec2

# ============ Global Configs End============

# ============ AWS Configs ============
AWS_REGION: cn-northwest-1                   # example: cn-northwest-1

# Note: this role must be created before run deployment
IAMRole: &IAM

# example: s3://xxx/kylin
S3_FULL_BUCKET_PATH: s3://xxx/kylin

# Security key name must not be null
KeyName: &security_key
# ============ AWS Configs End============

# ============ Tool Configs ============
## Dangerous Params
ALWAYS_DESTROY_ALL: true                     # if set to false means that vpc for cluster always retain

## Open public Ip on Instances
ASSOSICATED_PUBLIC_IP: &associated_public_ip 'true'

## kylin mode is in [all, query, job]
KYLIN_MODE: &kylin_mode all

## Stack Names
### Note: if need to change stack names please change it in ../utils.py too.
VPC_STACK: ec2-or-emr-vpc-stack
RDS_STACK: ec2-rds-stack
STATIC_SERVICE_STACK: ec2-static-service-stack
ZOOKEEPERS_STACK: ec2-zookeeper-stack
KYLIN_STACK: ec2-kylin-stack
SPARK_MASTER_STACK: ec2-spark-master-stack
SPARK_WORKER_STACK: ec2-spark-slave-stack

# Scale Nodes
KYLIN_SCALE_NODES: (1, 3)
SPARK_WORKER_SCALE_NODES: (1, 3)

## DB identifier for status check
DB_IDENTIFIER: &db_instance_id ec2-rds-kylin4

## User must set 'DB_HOST' which will be used to access RDS instance.
## DB_HOST bind to DB_IDENTIFIER
DB_PORT: &DbPort '3306'

## If DB_TYPE is 'rds', user must set 'DB_USER' and 'DB_PASSWORD' which can access RDS instance.
DB_USER: &DbUser 'root'
DB_PASSWORD: &DbPassword '123456xtt'

## Whether to use Local Cache + Soft Affinity
## Default is false.
## Note: this variable will be used in template which type is str!
USING_LOCALCACHE_SOFT_AFFINITY: &local_cache_soft_affinity "false"
# ============ Tool Configs End============

# ============ YAML Params ============
EC2_VPC_PARAMS:
  KylinVersion: *KYLIN_VERSION
  ClusterType: *platform
  Ec2OperationRole: *IAM

EC2_RDS_PARAMS:
  Ec2DbIdentifier: *db_instance_id
  Ec2DbUser: *DbUser
  Ec2DbPassword: *DbPassword
  Ec2DbPort: *DbPort
  Ec2Mode: test
  RDSEngine: mysql
  RDSEngineVersion: 5.7.25

EC2_STATIC_SERVICES_PARAMS:
  # Note: params details check in related yaml file
  SubnetId:
  SecurityGroupId:
  InstanceProfileId:
  DbHost:
  EMREc2KeyName: *security_key
  AssociatedPublicIp: *associated_public_ip

  DbPort: *DbPort
  DbUser: *DbUser
  DbPassword: *DbPassword

  StaticServicesScriptFileName: prepare-ec2-env-for-static-services.sh
  Ec2Mode: test
  # followed params is invalid if Ec2Mode(which set in the yaml) is 'test'
  Ec2InstanceTypeForStaticServices: m5.2xlarge
  Ec2VolumeSizeForStaticServicesNode: '20'
  Ec2VolumnTypeForStaticServicesNode: gp2

EC2_ZOOKEEPERS_PARAMS:
  # None value can be passed by the pre-step output, so params need to wait pre-step complete.
  # Note: params details check in related yaml file
  SubnetId:
  SecurityGroupId:
  EMREc2KeyName: *security_key
  AssociatedPublicIp: *associated_public_ip

  ZookeeperScriptFileName: prepare-ec2-env-for-zk.sh
  Ec2Mode: test
  # followed params is invalid if Ec2Mode(which set in the yaml) is 'test'
  Ec2InstanceTypeForZookeeper: m5.2xlarge
  Ec2VolumeSizeForZookeeperNode: '20'
  Ec2VolumnTypeForZookeeperNode: gp2

EC2_SPARK_MASTER_PARAMS:
  # None value can be passed by the pre-step output, so params need to wait pre-step complete.
  # Note: params details check in related yaml file
  InstanceProfileId:
  SubnetId:
  SecurityGroupId:

  EMREc2KeyName: *security_key
  DbPort: *DbPort
  DbUser: *DbUser
  DbPassword: *DbPassword

  AssociatedPublicIp: *associated_public_ip
  SparkMasterScriptFileName: prepare-ec2-env-for-spark-master.sh
  Ec2Mode: test
  # followed params is invalid if Ec2Mode(which set in the yaml) is 'test'
  InstanceType: m5.2xlarge
  Ec2VolumnTypeForSparkMasterNode: gp2
  Ec2VolumeSizeForSparkMasterNode: '50'
  LocalCacheSoftAffinity: *local_cache_soft_affinity

EC2_KYLIN4_PARAMS:
  # None value can be passed by the pre-step output, so params need to wait pre-step complete.
  # Note: params details check in related yaml file
  ZookeepersHost:
  SparkMasterNodeHost:
  InstanceProfileId:
  SubnetId:
  SecurityGroupId:

  AssociatedPublicIp: *associated_public_ip
  # Must be in [ all, job, query ]
  Ec2KylinMode: *kylin_mode

  DbPort: *DbPort
  DbUser: *DbUser
  DbPassword: *DbPassword
  # Note: this key pair must be created before run
  EMREc2KeyName: *security_key

  Kylin4ScriptFileName: prepare-ec2-env-for-kylin4.sh
  Ec2Mode: test
  # followed params is invalid if Ec2Mode(which set in the yaml) is 'test'
  InstanceType: m5.2xlarge
  Ec2VolumnTypeForKylin4Node: gp2
  Ec2VolumeSizeForKylin4Node: '50'
  LocalCacheSoftAffinity: *local_cache_soft_affinity

EC2_SPARK_WORKER_PARAMS:
  # None value can be passed by the pre-step output, so params need to wait pre-step complete.
  # Note: params details check in related yaml file
  SparkMasterNodeHost:
  InstanceProfileId:
  SubnetId:
  SecurityGroupId:
  EMREc2KeyName: *security_key
  # set 'true' for test
  AssociatedPublicIp: *associated_public_ip

  SlaveScriptFileName: prepare-ec2-env-for-spark-slave.sh
  Ec2Mode: test
  # followed params is invalid if Ec2Mode(which set in the yaml) is 'test'
  InstanceType: m5.2xlarge
  Ec2VolumnTypeForSlaveNode: gp2
  Ec2VolumeSizeForSlaveNode: '50'
  LocalCacheSoftAffinity: *local_cache_soft_affinity

EC2_KYLIN4_SCALE_PARAMS:
  # None value can be passed by the pre-step output, so params need to wait pre-step complete.
  # Note: params details check in related yaml file
  ZookeepersHost:
  SparkMasterNodeHost:
  InstanceProfileId:
  SubnetId:
  SecurityGroupId:

  AssociatedPublicIp: *associated_public_ip
  # Must be in [ all, job, query ]
  Ec2KylinMode: *kylin_mode

  DbPort: *DbPort
  DbUser: *DbUser
  DbPassword: *DbPassword
  # Note: this key pair must be created before run
  EMREc2KeyName: *security_key

  Kylin4ScriptFileName: prepare-ec2-env-for-kylin4.sh
  Ec2Mode: test
  # followed params is invalid if Ec2Mode(which set in the yaml) is 'test'
  InstanceType: m5.2xlarge
  Ec2VolumnTypeForKylin4Node: gp2
  Ec2VolumeSizeForKylin4Node: '50'
  LocalCacheSoftAffinity: *local_cache_soft_affinity

EC2_SPARK_SCALE_SLAVE_PARAMS:
  # None value can be passed by the pre-step output, so params need to wait pre-step complete.
  # Note: params details check in related yaml file
  SparkMasterNodeHost:
  Ec2InstanceProfile:
  PublicSubnetId:
  SecurityGroupID:
  WorkerNum:
  WaitingTime: '100'
  EMREc2KeyName: *security_key
  # set 'true' for test
  AssociatedPublicIp: *associated_public_ip
  ScriptFileName: prepare-ec2-env-for-slave.sh
  Ec2Mode: test
  # followed params is invalid if Ec2Mode(which set in the yaml) is 'test'
  InstanceType: m5.2xlarge
  Ec2VolumnTypeForSlaveNode: gp2
  Ec2VolumeSizeForSlaveNode: '50'
  LocalCacheSoftAffinity: *local_cache_soft_affinity

# ============ YAML Params End ============
